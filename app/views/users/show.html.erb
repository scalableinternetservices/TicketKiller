<% provide(:title, @user) %>

<div class="row">
  <aside class="col-md-4">
    <section class="user_info">
      <h1>
        <%# if @user.avatar.exists? %>
        <%#= image_tag @user.avatar.url(:thumb) %>
        <%# else %>
        <%= gravatar_for @user %>
        <%# end %>
        <%= @user.name %>
      </h1>
    </section>
    <%= link_to "My Cars", showYourCar_path, class: "btn btn-primary" %>
  </aside>
  
</div>

<div class="map-wrapper" style="margin-top: 20px; margin-bottom:20px">
  <div id="map" style="height: 430px">
    
    <script>
      var map, bounds;
      var officer_markers = [];
      var lat;
      var circle;
      var danger_zone = 0.3;
      

      function initMap() {
        var init_center = {lat: 34.03, lng: -118.15};
        map = new google.maps.Map(document.getElementById('map'), {
          center: init_center,
          scrollwheel: false,
          zoom: 16
        });

        bounds = new google.maps.LatLngBounds();
        addCarMarkers();
        circle = new google.maps.Circle({
          map: map,
          radius: danger_zone * 1609.34,    // 0.5 miles in metres
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.35,        
        });
        //addOfficerMarkers();
      }

      function addCarMarkers() {
        var allCars = <%= (@user.car.collect {|c| [c.lat, c.long]}).to_json %>;

        for (var i = 0; i < allCars.length; i++) {
          var lat = allCars[i][0];
          var lng = allCars[i][1];

          var marker = new google.maps.Marker({
            position: {lat: lat, lng: lng},
            map: map
          });
          bounds.extend(marker.position);

          if (allCars.length > 0) {
            map.setCenter(bounds.getCenter());
            map.fitBounds(bounds);
          }
          // car_markers.push(marker);
          // console.log(marker.getPosition().lat());
          addListener(marker);
        }
      }

      function addListener(marker) {
        marker.addListener('click', function() {
          map.setZoom(15); 
          removeMarkers(officer_markers);
          circle.bindTo('center', this, 'position');
          var car_lat = this.getPosition().lat();
          var car_lng = this.getPosition().lng();
          map.setCenter(this.getPosition());
          addOfficerMarkers(car_lat, car_lng);
          console.log(officer_markers);
          
        });
      }

      function removeMarkers(markers) {
        for(i=0; i<markers.length; i++){
          markers[i].setMap(null);
        }
        officer_markers = [ ];
      }
      
      function addOfficerMarkers(car_lat, car_lng) {
        // console.log(car_lat);
        // console.log(car_lng);
        var image = {
          url: '<%= image_path("officer.png") %>',
          scaledSize: new google.maps.Size(40, 40)
        };
        var allOfficers = <%= (@officers.collect {|o| [o.lat, o.long]}).to_json %>;
        
        for (var i = 0; i < allOfficers.length; i++) {
          var officer_lat = allOfficers[i][0];
          var officer_lng = allOfficers[i][1];
          //distance in miles
          var distance = calDistance(car_lat, car_lng, officer_lat, officer_lng)
          // console.log(distance);
          
          if (distance < danger_zone) {
            var marker_officer = new google.maps.Marker({
              position: {lat: officer_lat, lng: officer_lng},
              map: map,
              icon: image,
              animation: google.maps.Animation.BOUNCE
            });
            bounds.extend(marker_officer.position);
            officer_markers.push(marker_officer);
          }
        }
      }

      function calDistance(lat1, lon1, lat2, lon2) {
        var radlat1 = Math.PI * lat1/180;
        var radlat2 = Math.PI * lat2/180;
        var theta = lon1-lon2;
        var radtheta = Math.PI * theta/180;
        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
        dist = Math.acos(dist);
        dist = dist * 180/Math.PI;
        dist = dist * 60 * 1.1515;
        // if (unit=="K") { dist = dist * 1.609344 }
        return dist;
      }

      
    </script>

    <!-- Colin's google maps api key -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAQkN_qJiypesT-pr5vj0k9AyED7OsT4cU&callback=initMap"
            async defer></script>
  </div>
</div>

<div class="row">
  <%= link_to "Locate Your Car", locateYourCar_path, class: "btn btn-lg btn-primary" %>
  <%= link_to "Report Officer", reportofficer_path, class: "btn btn-lg btn-primary" %>
</div>


